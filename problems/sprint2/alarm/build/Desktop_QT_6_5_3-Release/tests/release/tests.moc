/****************************************************************************
** Meta object code from reading C++ file 'tests.cpp'
**
** Created by: The Qt Meta Object Compiler version 68 (Qt 6.5.3)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <QtCore/qmetatype.h>

#if __has_include(<QtCore/qtmochelpers.h>)
#include <QtCore/qtmochelpers.h>
#else
QT_BEGIN_MOC_NAMESPACE
#endif


#include <memory>

#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tests.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 68
#error "This file was generated using the moc from 6.5.3. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

#ifndef Q_CONSTINIT
#define Q_CONSTINIT
#endif

QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
QT_WARNING_DISABLE_GCC("-Wuseless-cast")
namespace {

#ifdef QT_MOC_HAS_STRINGDATA
struct qt_meta_stringdata_CLASSTestYourAppENDCLASS_t {};
static constexpr auto qt_meta_stringdata_CLASSTestYourAppENDCLASS = QtMocHelpers::stringData(
    "TestYourApp",
    "init",
    "",
    "cleanup",
    "TestTimer",
    "TestTimerNext",
    "TestTimeDisplaying",
    "TestTimeDisplayingNext",
    "TestTodayAlarmMoment",
    "TestTomorrowAlarmMoment",
    "TestRemainingTimeDisplayingToday",
    "TestRemainingTimeDisplayingTodayNext",
    "TestRemainingTimeDisplayingTomorrow",
    "TestAlarmStartStop",
    "TestSetMelody",
    "TestAlarm"
);
#else  // !QT_MOC_HAS_STRING_DATA
struct qt_meta_stringdata_CLASSTestYourAppENDCLASS_t {
    uint offsetsAndSizes[32];
    char stringdata0[12];
    char stringdata1[5];
    char stringdata2[1];
    char stringdata3[8];
    char stringdata4[10];
    char stringdata5[14];
    char stringdata6[19];
    char stringdata7[23];
    char stringdata8[21];
    char stringdata9[24];
    char stringdata10[33];
    char stringdata11[37];
    char stringdata12[36];
    char stringdata13[19];
    char stringdata14[14];
    char stringdata15[10];
};
#define QT_MOC_LITERAL(ofs, len) \
    uint(sizeof(qt_meta_stringdata_CLASSTestYourAppENDCLASS_t::offsetsAndSizes) + ofs), len 
Q_CONSTINIT static const qt_meta_stringdata_CLASSTestYourAppENDCLASS_t qt_meta_stringdata_CLASSTestYourAppENDCLASS = {
    {
        QT_MOC_LITERAL(0, 11),  // "TestYourApp"
        QT_MOC_LITERAL(12, 4),  // "init"
        QT_MOC_LITERAL(17, 0),  // ""
        QT_MOC_LITERAL(18, 7),  // "cleanup"
        QT_MOC_LITERAL(26, 9),  // "TestTimer"
        QT_MOC_LITERAL(36, 13),  // "TestTimerNext"
        QT_MOC_LITERAL(50, 18),  // "TestTimeDisplaying"
        QT_MOC_LITERAL(69, 22),  // "TestTimeDisplayingNext"
        QT_MOC_LITERAL(92, 20),  // "TestTodayAlarmMoment"
        QT_MOC_LITERAL(113, 23),  // "TestTomorrowAlarmMoment"
        QT_MOC_LITERAL(137, 32),  // "TestRemainingTimeDisplayingToday"
        QT_MOC_LITERAL(170, 36),  // "TestRemainingTimeDisplayingTo..."
        QT_MOC_LITERAL(207, 35),  // "TestRemainingTimeDisplayingTo..."
        QT_MOC_LITERAL(243, 18),  // "TestAlarmStartStop"
        QT_MOC_LITERAL(262, 13),  // "TestSetMelody"
        QT_MOC_LITERAL(276, 9)   // "TestAlarm"
    },
    "TestYourApp",
    "init",
    "",
    "cleanup",
    "TestTimer",
    "TestTimerNext",
    "TestTimeDisplaying",
    "TestTimeDisplayingNext",
    "TestTodayAlarmMoment",
    "TestTomorrowAlarmMoment",
    "TestRemainingTimeDisplayingToday",
    "TestRemainingTimeDisplayingTodayNext",
    "TestRemainingTimeDisplayingTomorrow",
    "TestAlarmStartStop",
    "TestSetMelody",
    "TestAlarm"
};
#undef QT_MOC_LITERAL
#endif // !QT_MOC_HAS_STRING_DATA
} // unnamed namespace

Q_CONSTINIT static const uint qt_meta_data_CLASSTestYourAppENDCLASS[] = {

 // content:
      11,       // revision
       0,       // classname
       0,    0, // classinfo
      14,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags, initial metatype offsets
       1,    0,   98,    2, 0x08,    1 /* Private */,
       3,    0,   99,    2, 0x08,    2 /* Private */,
       4,    0,  100,    2, 0x08,    3 /* Private */,
       5,    0,  101,    2, 0x08,    4 /* Private */,
       6,    0,  102,    2, 0x08,    5 /* Private */,
       7,    0,  103,    2, 0x08,    6 /* Private */,
       8,    0,  104,    2, 0x08,    7 /* Private */,
       9,    0,  105,    2, 0x08,    8 /* Private */,
      10,    0,  106,    2, 0x08,    9 /* Private */,
      11,    0,  107,    2, 0x08,   10 /* Private */,
      12,    0,  108,    2, 0x08,   11 /* Private */,
      13,    0,  109,    2, 0x08,   12 /* Private */,
      14,    0,  110,    2, 0x08,   13 /* Private */,
      15,    0,  111,    2, 0x08,   14 /* Private */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

Q_CONSTINIT const QMetaObject TestYourApp::staticMetaObject = { {
    QMetaObject::SuperData::link<QObject::staticMetaObject>(),
    qt_meta_stringdata_CLASSTestYourAppENDCLASS.offsetsAndSizes,
    qt_meta_data_CLASSTestYourAppENDCLASS,
    qt_static_metacall,
    nullptr,
    qt_incomplete_metaTypeArray<qt_meta_stringdata_CLASSTestYourAppENDCLASS_t,
        // Q_OBJECT / Q_GADGET
        QtPrivate::TypeAndForceComplete<TestYourApp, std::true_type>,
        // method 'init'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'cleanup'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'TestTimer'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'TestTimerNext'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'TestTimeDisplaying'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'TestTimeDisplayingNext'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'TestTodayAlarmMoment'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'TestTomorrowAlarmMoment'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'TestRemainingTimeDisplayingToday'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'TestRemainingTimeDisplayingTodayNext'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'TestRemainingTimeDisplayingTomorrow'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'TestAlarmStartStop'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'TestSetMelody'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'TestAlarm'
        QtPrivate::TypeAndForceComplete<void, std::false_type>
    >,
    nullptr
} };

void TestYourApp::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<TestYourApp *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->init(); break;
        case 1: _t->cleanup(); break;
        case 2: _t->TestTimer(); break;
        case 3: _t->TestTimerNext(); break;
        case 4: _t->TestTimeDisplaying(); break;
        case 5: _t->TestTimeDisplayingNext(); break;
        case 6: _t->TestTodayAlarmMoment(); break;
        case 7: _t->TestTomorrowAlarmMoment(); break;
        case 8: _t->TestRemainingTimeDisplayingToday(); break;
        case 9: _t->TestRemainingTimeDisplayingTodayNext(); break;
        case 10: _t->TestRemainingTimeDisplayingTomorrow(); break;
        case 11: _t->TestAlarmStartStop(); break;
        case 12: _t->TestSetMelody(); break;
        case 13: _t->TestAlarm(); break;
        default: ;
        }
    }
    (void)_a;
}

const QMetaObject *TestYourApp::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *TestYourApp::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_CLASSTestYourAppENDCLASS.stringdata0))
        return static_cast<void*>(this);
    return QObject::qt_metacast(_clname);
}

int TestYourApp::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = QObject::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 14)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 14;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 14)
            *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType();
        _id -= 14;
    }
    return _id;
}
QT_WARNING_POP
